[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"



[project]
name = "zuup"
version = "0.1.0"
description = "Unified download manager with HTTP/HTTPS, FTP/SFTP, BitTorrent, and media download support"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    {name = "Sayed Ahmed"}
]
license = {text = "MIT"}
keywords = ["zuup", "download", "torrent", "http", "ftp", "media", "yt-dlp"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Core download engines
    "libtorrent>=2.0.11",
    "pycurl>=7.45.7",
    "yt-dlp>=2025.9.23",
    "paramiko>=3.0.0", # SFTP support
    # Data models and validation
    "pydantic>=2.0.0",
    "cuid>=0.4.0", # Unique identifiers
    # GUI framework
    "PySide6>=6.5.0",
    # API server
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
    # Database and storage
    "sqlalchemy>=2.0.0",
    "aiosqlite>=0.19.0",
    # Utilities
    "click>=8.0.0", # CLI framework
    "rich>=13.0.0", # Rich console output
    "httpx>=0.24.0", # HTTP client
    "cryptography>=41.0.0", # Secure storage
    "psutil>=5.9.0", # System monitoring
]

[project.optional-dependencies]
dev = [
    # Type checking
    "mypy>=1.5.0",
    "types-paramiko",
    "types-requests",

    # Code quality
    "ruff>=0.1.0",

    # Documentation
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
]

[project.scripts]
zuup = "zuup.main:main"

[project.urls]
Homepage = "https://github.com/sayeed205/zuup"
Repository = "https://github.com/sayeed205/zuup"
"Bug Tracker" = "https://github.com/sayeed205/zuup/issues"

# Tool configurations
[dependency-groups]
dev = [
    "mypy>=1.5.0",
    "types-paramiko",
    "types-requests",
    "ruff>=0.1.0",
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["src/zuup"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/LICENSE",
]

# MyPy configuration for strict type checking
[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
show_column_numbers = true
pretty = true

# Module-specific overrides
[[tool.mypy.overrides]]
module = [
    "libtorrent.*",
    "pycurl.*",
    "cuid.*",
]
ignore_missing_imports = true

# Ruff configuration
[tool.ruff]
target-version = "py310"
line-length = 88
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",   # line too long, handled by formatter
    "PLR0913", # too many arguments
    "PLR0912", # too many branches
    "PLR0915", # too many statements
]

[tool.ruff.lint.isort]
known-first-party = ["zuup"]
force-sort-within-sections = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"


